var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': '作業進度', 'text': '\n \n \n week \n 目標 \n 完成進度 \n \n \n W1: \n 建立倉儲 \n 100% \n \n \n W2: \n 建立網頁 \n 100% \n \n \n W3: \n 拍攝網站教學影片 \n 100% \n \n \n W4: \n PC Hardware帳號建立 \n 100% \n \n \n W5: \n \n PC HardwareUNIT 1，UNIT 2，PCH 1， \n 完成英翻中文放到網頁上 \n \n \n UNIT1:100% \n UNIT2:100% \n PCH1:70% \n \n \n \n \n W6: \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 未來計畫 \n \n \n \n W6 \n 完成PCH 1英翻中，網路配置與架設網站心得放到網頁上 \n \n \n W7 \n 整合組員hw1的內容法到網站上完成hw1作業 \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '作業進度.html'}, {'title': '網站教學影片', 'text': '影片: https://youtu.be/wNmVh06l6JE \n', 'tags': '', 'url': '網站教學影片.html'}, {'title': 'W1作業', 'text': '', 'tags': '', 'url': 'W1作業.html'}, {'title': '網路配置', 'text': 'ipv4:第四版網路協定 \n ipv6:第六版網路協定 \n proxy設定:[2001:288:6004:17::69]:3128\xa0 /有69，53，42三種選項\xa0\xa0 \n', 'tags': '', 'url': '網路配置.html'}, {'title': '個人', 'text': '\n UNIT\xa01: Succeeding in PC Hardware :成功的電腦硬件 \n \n \n \n \n Hardware is an online course, where the content will be presented in the form of both text and activities. \n While you will have more flexibility than in a traditional course, you will also have more responsibility for your own learning. You will need to: \n \n Plan how to work through each unit. \n Determine how to use the various features of the course to help you learn. \n Decide when you need to seek additional support. \n \n \n \n \n \n PC Hardware是一門在線課程，其中的內容將以文本和活動形式呈現。 \n 與傳統課程相比，您將擁有更多的靈活性，但是您也將對自己的學習承擔更多責任。您將需要： \n \n 計劃如何遍歷每個單元。 \n 確定如何使用課程的各種功能來幫助您學習。 \n 確定何時需要尋求其他支持。 \n \n \n \n \n \n \n \n \n \n What You Need to Know About the Course ( 您需要了解的課程內容 ) \n \n \n \n \n This course contains multiple modules. Each module has features designed to support you as an independent learner, including: \n \n Learning Objectives:\xa0These are descriptions of what you should be able to do at the end of a section. A Learning Objective will allow you to direct your learning efforts and enable you to monitor your progress as you explore the content and engage in the activities. \n Explanatory Content:\xa0This is the informational “meat” of every chapter. Consisting of short passages of text with information, examples, images, and explanations, this explanatory content contains pieces such as:\n \n Walk-throughs:\xa0These are videos embedded in the pages to exemplify the concepts you are exploring. They may provide a more detailed explanation of a topic or guide you through the steps of a process. \n Examples:\xa0Designed to illustrate specific applications of the skills and learning objectives that the course supports you to achieve. \n Labs:\xa0Simulations and lab activities designed to give you an opportunity to interact with various hardware elements. \n Many Students Wonder sidebars:\xa0These sidebars serve two purposes: (1) to give a quick review of concepts, such as "highly specialized input devices," that are used in the PC Hardware material and (2) to provide additional material or background information that you may find surprising and interesting but that is not going to be assessed in the Quiz. \n \n \n \n \n \n \n \n 本課程包含多個模塊。每個模塊均具有旨在支持您作為獨立學習者的功能，包括： \n \n 學習目標：這些是本節末尾應該做的事情的描述。學習目標將使您能夠指導學習努力，並在探索內容和參與活動時監控進度。 \n 內容解釋性：這是每章的信息性“內容”。由簡短的段落，信息，示例，圖像和說明組成，此說明性內容包含以下內容：\n \n 演練：這些是嵌入在頁面中的視頻，以例證您正在探索的概念。他們可能會提供有關主題的更詳細說明，或指導您完成流程的各個步驟。 \n 示例：旨在說明該課程支持您實現的技能和學習目標的特定應用。 \n 實驗室：模擬和實驗室活動旨在為您提供與各種硬件元素進行交互的機會。 \n 許多學生都想知道側邊欄：這些側邊欄有兩個目的：（1）快速回顧概念，例如PC硬件材料中使用的“高度專業化的輸入設備”，以及（2）提供其他材料或背景信息您可能會發現令人驚訝和有趣的東西，但是測驗中不會對此進行評估。 \n \n \n \n \n \n \n Learning Activities:\xa0There are different types of activities interspersed throughout the course. They include:\n \n Learn By Doing activities:\xa0Learn By Doing activities follow the short explanations and examples. These activities give you the chance to investigate and practice key ideas. Learn By Doing activities have hints and feedback to guide you if you need it. \n Did I Get This? activities:\xa0Did I Get This? activities are your chance to do a quick "self-check." These activities do not have hints, and often follow a Learn by Doing activity so that you can determine if you understand the key ideas. This will help you make sure you are ready for graded activities. \n Quizzes:\xa0These are short assignments that are graded. There is a Quiz at the end of each Module. The Quiz will show you and your instructor how well you understand the key concepts. If you read the information and do the activities in each Module, you should be ready for the Quiz. \n \n \n \n \n 學習活動：在整個課程中散佈著不同類型的活動。它們包括：\n \n 邊幹邊學的活動：邊幹邊學的活動遵循簡短的說明和示例。這些活動使您有機會研究和實踐關鍵思想。邊做邊學活動有提示和反饋，以在需要時指導您。 \n 我明白了嗎？活動：我明白了嗎？活動是您進行快速“自檢”的機會。這些活動沒有提示，通常會跟隨“做中學”活動，以便您確定自己是否了解關鍵思想。這將幫助您確保已準備好進行分級活動。 \n 測驗：這些是評分的短期作業。每個模塊的末尾都有一個測驗。測驗將向您和您的老師展示您對關鍵概念的理解程度。如果您閱讀了該信息並在每個模塊中進行了活動，那麼您應該已經做好測驗的準備。 \n \n \n \n \n Metacognitive Activities:\xa0These activities are designed to support your development as an independent learner, encouraging you to reflect on your progress and plan for continuing success. These activities include:\n \n My Response activities:\xa0These short activities are located at the end of the module; they encourage you to reflect on your progress through the module and estimate how well you believe you\'ve attained the module\'s learning objectives. These activities also provide a place to share continuing questions and areas of difficulty (if you\'re using the course in conjunction with an instructor, your questions will be shared with your instructor). \n Checkpoints:\xa0These activities are located across the course after sections of content that can be particularly challenging or require additional practice. These metacognitive\xa0 checkpoints encourage you to review your progress so far and assess yourself: are you ready to continue, or do you believe you need additional materials, practice, or self-assessment? If you feel that you\'re not ready to proceed, these checkpoints provide links to additional learning materials. \n \n \n \n \n 元認知活動：這些活動旨在支持您作為獨立學習者的發展，鼓勵您反思自己的進步併計劃繼續取得成功。這些活動包括：\n \n 我的響應活動：這些簡短的活動位於模塊的末尾；他們鼓勵您反思本單元的學習進度，並估計您認為自己達到本單元學習目標的程度。這些活動還提供了一個分享繼續存在的問題和困難領域的地方（如果您與講師一起使用本課程，您的問題將與講師分享）。 \n 檢查點：這些活動位於課程的各個部分之後，這些部分可能特別具有挑戰性或需要其他練習。這些元認知 檢查點可以 鼓勵您回顧迄今為止的進展並進行自我評估：您準備好繼續嗎，還是您認為您需要其他材料，練習或自我評估？如果您感覺還沒有準備好繼續，這些檢查點提供了指向其他學習資料的鏈接。 \n \n \n \n \n \n \n UNIT\xa02: Hardware Basics :基礎硬件 \n \n \n \n \n \n \n Introduction \n \n \n Functions of Computers: Input, Output, Storage, and Processing \n \n \n Hardware \n \n \n Software \n \n \n Firmware \n \n \n Componentization/Standardization \n \n \n Connection Interfaces and Cables \n \n \n External Components of the Desktop System Unit \n \n \n Connections Between Common Peripherals and Standard Ports \n \n \n USB AND PS/2 \n \n \n SCSI and FireWire \n \n \n Serial and Parallel Ports \n \n \n \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n \n \n \n \n \n \n \n 介紹 \n \n \n 計算機功能：輸入，輸出，存儲和處理 \n \n \n 硬件 \n \n \n 軟件 \n \n \n 固件 \n \n \n 組件化/標準化 \n \n \n 連接接口和電纜 \n \n \n 台式機系統單元的外部組件 \n \n \n 通用外設與標準端口之間的連接 \n \n \n USB和PS / 2 \n \n \n SCSI和FireWire \n \n \n 串行和並行端口 \n \n \n \n \n \n \n \n 6\n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n \n \n \n \n \n \n \n \n \n PCH\xa01: The Basics :關於硬件 \n \n \n \n \n P6\xa0 Introduction(介紹) \n \n This lesson will cover the basics of PC Hardware. First, you will learn the various parts of both desktop and laptop computers. Next, you will discover basic terms that are associated with computers, such as hardware, software, and firmware. You will learn the most basic functions of a computer: input, output, storage, and processing. Next, you will explore various input and output interfaces on the computer and the associated cables. Finally, you will review connections between common peripherals and discuss the standard ports. \n \n \n \n 本課將介紹PC硬件的基礎知識。 首先，您將學習台式計算機和便攜式計算機的各個部分。 接下來，您將發現與計算機關聯的基本術語，例如硬件，軟件和固件。 您將學習計算機的最基本功能：輸入，輸出，存儲和處理。 接下來，您將探索計算機上的各種輸入和輸出接口以及相關的電纜。 最後，您將回顧通用外設之間的連接並討論標準端口。 \n \n \n \n \n \n \n \n \n P7  Introduction(計算機功能：輸入，輸出，存儲和處理) \n \n What makes a computer a computer? Does a computer have to have certain pieces to be considered a computer? Consider the computers of the 1980s: they all included a display screen, a keyboard, and a processing unit. Over time, the computers have evolved into devices that do not look like a “typical” computer. Consider the iPhone or Android tablet, where the method of input relies on touch, without the use of a separate keyboard. How about the calculator watch displayed below; is it a computer? \n 是什麼使計算機成為計算機？ 一台計算機是否必須具有某些部件才能視為計算機？ 考慮一下1980年代的計算機：它們都包括顯示屏，鍵盤和處理單元。 隨著時間的流逝，計算機已經演變為看起來不像“典型”計算機的設備。 考慮iPhone或Android平板電腦，其中輸入方法依靠觸摸，而不使用單獨的鍵盤。 下面顯示的計算器手錶怎麼樣？ 是電腦嗎？ \n \n Regardless of the form factor of the machine, four basic functions — input, output, storage, and processing — make a computer. Below is a display of how those functions work together. \n 不論機器的外形尺寸如何，計算機都具有四個基本功能（輸入，輸出，存儲和處理）。 下面顯示了這些功能如何協同工作。 \n \n So, as we consider the history of computers and the future of computers, we must consider what is and what is not a computer. Obviously, our desktops and laptops are computers, since they perform the input, processing, output, and storage functions. But so also are our cellular phones and smartphones, since they perform all these functions. What about our televisions? Many of these are complex computers as well, since they take information from our input using the remote control, process the information, and return an output, such as an on-demand movie. Many of these televisions also store the information, such as your favorite channels or even the video content itself for later playback. Even some thermostats are computers, since they also perform these functions, such as the “smart thermostats,” like the NEST and other popular brands. Remember, the main determination of whether something is a computer or not relies on the functions it performs: does it perform input, processing, output, and storage? If so, then it is a computer. \n Read more about different types of computers here. \n 因此，當我們考慮計算機的歷史和計算機的未來時，我們必須考慮什麼是計算機，什麼不是計算機。顯然，我們的台式機和筆記本電腦是計算機，因為它們執行輸入，處理，輸出和存儲功能。但是，由於我們的手機和智能手機執行所有這些功能，所以它們也是如此。那我們的電視呢？其中許多計算機也是複雜的計算機，因為它們使用遙控器從我們的輸入中獲取信息，處理信息並返回輸出，例如點播電影。這些電視中的許多電視也會存儲信息，例如您喜歡的頻道，甚至是視頻內容本身，以供以後播放。甚至有些恆溫器都是計算機，因為它們也執行這些功能，例如NEST和其他流行品牌的“智能恆溫器”。記住，確定某物是否為計算機的主要決定因素是其執行的功能：它執行輸入，處理，輸出和存儲嗎？如果是這樣，則它是一台計算機。 \n 在此處閱讀有關不同類型計算機的更多信息。 \n True or False: A modern car is a computer. \n Ans:ture \n Correct. Modern cars are computers because four functions exist: input, output, processing, and storage. An example would be when a dashboard display indicates low tire pressure. The input is the car’s measurement of tire pressure. The car stores the correct pressure and compares the actual pressure. This comparison is the processing. The output is the light that illuminates on the dashboard to alert the driver that the pressure is low. \n 是非題：現代汽車就是計算機。 \n \n Ans:正確 \n \n 正確。 現代汽車是計算機，因為存在四個功能：輸入，輸出，處理和存儲。 一個示例是儀表板顯示屏指示輪胎氣壓低時。 輸入是汽車的輪胎壓力測量值。 汽車會存儲正確的壓力並比較實際壓力。 這個比較就是處理。 輸出的是在儀表板上點亮的光，以警告駕駛員壓力低。 \n \n \n \n P8\xa0 Hardware硬件 \n \n A computer system includes hardware, software, and firmware. To build a computer, we must first gather the required hardware. The hardware is the part of the computer that you can touch and feel. When most people see a typical computer, they understand that there are physical components to what they are using, such as the the hard metallic or plastic System unit, central processing unit (CPU), power supply, disk drives, and other essential components. Hardware is limited by its manufacture date and specifically by the motherboard installed. Depending on age and availability, some of the hardware items may be expensive to acquire, repair, or replace. For example, if the computer is running slower over time as you add newer software, it may be necessary to increase the amount of physical memory, called \xa0 RAM \xa0 (random access memory), in the computer. In order to do this, the technician would need to purchase the correct size, speed, and style of memory according to the motherboard specifications and install it in the computer which will then enhance its ability to process information more quickly. \n Computer hardware consists of the mechanical and electrical parts of the computer. Data flows through the motherboard in what is known as the system bus. External ports, which are discussed in more detail further in this lesson, allow peripheral devices to be connected to the system unit. Common ports are USB, serial, and parallel ports. \n Peripheral devices consist of hardware attached to the system unit and are designated as input, output, or both. Traditional input device examples are the mouse and keyboard which are used to input data. \n 計算機系統包括硬件，軟件和固件。要構建計算機，我們必須首先收集所需的硬件。硬件是您可以觸摸和感覺到的計算機的一部分。當大多數人看到一台典型的計算機時，他們就會知道他們所使用的是物理組件，例如硬金屬或塑料系統單元，中央處理器（CPU），電源，磁盤驅動器和其他必要組件。硬件受製造日期限制，特別是受安裝的主板限制。根據使用年限和可用性，某些硬件項目的獲取，維修或更換可能會很昂貴。例如，如果在添加新軟件時計算機運行速度隨著時間的推移變慢，則可能有必要增加計算機中稱為RAM（隨機存取存儲器）的物理內存量。為此，技術人員需要根據主板規格購買正確的大小，速度和內存類型，然後將其安裝在計算機中，這將增強其更快地處理信息的能力。 \n 計算機硬件由計算機的機械和電氣部分組成。數據以所謂的系統總線流經母板。在本課程中將進一步詳細討論的外部端口允許將外圍設備連接到系統單元。通用端口是USB，串行和並行端口。 \n 外圍設備由連接到系統單元的硬件組成，並被指定為輸入，輸出或兩者。傳統的輸入設備示例是用於輸入數據的鼠標和鍵盤。 \n \n Output devices consist of common items such as monitors, speakers, and printers. All of these devices are ways that the computer can give feedback to the user through either visual or auditory output. \n Traditionally singular devices have evolved to become both input and output. Gaming Joysticks which provide feedback to the user through vibrations and of course the touch-screen display now serve as both. \n 輸出設備由通用項目組成，例如監視器，揚聲器和打印機。 所有這些設備都是計算機可以通過視覺或聽覺輸出向用戶提供反饋的方式。 \n 傳統上，單個設備已演變為輸入和輸出。 通過振動向用戶提供反饋的遊戲操縱桿，當然觸摸屏顯示器現在兼用作兩者。 \n \n \n \n \n \n \n \n \n \n \n \n P9  Software(軟件) \n \n Software is completely intangible and cannot be physically touched. Software, in its purest form, is a series of 1s and 0s (bits) that make up the code that gives the computer its instructions on how to perform a certain task. While you may be able to touch the media on which the software is stored (like a CD or DVD), you cannot really touch the software code itself. \n The most basic software that a computer requires is the operating system. There are numerous operating systems on the market today, including various versions of Microsoft Windows, Macintosh OS X, Linux, Android, and iOS, to name just a few. The operating system provides the standard methods for saving, retrieving, changing, printing, and transmitting information in the computer. Operating systems contain internal commands, which are programs that are built into the operating system to perform basic tasks such as file management (delete, copy, and rename files). Additionally, operating systems also contain external commands, which are added programs to complete more complicated functions, such as defragmentation of a hard drive or handling the remote control of another computer on the network. \n Finally, there are software programs called applications. These programs are used to create, store, modify, and view information that you create. Applications, such as Microsoft Office or Adobe Acrobat, allow you to read and create documents and presentations. Other applications, such as games and web browsers, may instead be used for entertainment. \n \n \n \n learn by doing \n \n Which of the following is \xa0 not \xa0 true of software? \n \n Software provides instructions to tell the computer’s hardware what to do. \n An operating system is a form of software. \n \xa0√Software can be touched and physically handled. \n Applications are a form of software. \n \n \n \n \n \n \n \n \n \n 軟件是完全無形的，不能被實際觸摸。最純粹形式的軟件是由一系列1和0（位）組成的代碼，這些代碼向計算機提供有關如何執行特定任務的指令。雖然您可以觸摸存儲軟件的介質（例如CD或DVD），但實際上不能觸摸軟件代碼本身。 \n 計算機所需的最基本的軟件是操作系統。 當今市場上有許多操作系統，其中包括Microsoft Windows，Macintosh OS X，Linux，Android和iOS的各種版本。 操作系統提供了用於在計算機中保存，檢索，更改，打印和傳輸信息的標準方法。 操作系統包含內部命令，這些內部命令是操作系統中內置的用於執行基本任務（例如文件管理（刪除，複製和重命名文件））的程序。 此外，操作系統還包含外部命令，這些命令是添加的程序，以完成更複雜的功能，例如對硬盤驅動器進行碎片整理或處理網絡上另一台計算機的遠程控制。 \n 最後，有稱為應用程序的軟件程序。 這些程序用於創建，存儲，修改和查看您創建的信息。 諸如Microsoft Office或Adobe Acrobat之類的應用程序允許您閱讀並創建文檔和演示文稿。 可以將其他應用程序（例如游戲和Web瀏覽器）用於娛樂。 \n 以下哪項對軟件 不 適用？ \n \n 軟件提供了指示，以告知計算機硬件該怎麼做。 \n 操作系統是一種軟件形式。 \n \xa0√可以觸摸和物理處理軟件。 \n 應用程序是一種軟件形式。 \n \n \n \n \n \n \n \n \n \n \n \n P10 \xa0 Firmware 固件 \n \n Firmware is a combination of hardware and software, often called “software on a chip.” Firmware allows control of the device to which the chip is connected. A firmware chip contains specialized software and is often attached to motherboards, optical drives (such as CD, DVD, or Blu-ray), mass storage devices, and other specialized hardware. \n In older generations of firmware, the firmware was not upgradable unless you replaced the physical chip, but in recent years firmware has been designed to be “flashable.” This means that the chip can be upgraded if the software is outdated or has a programming error. This firmware “flash” replaces the older software on the chip with the latest version, improving performance or enhancing security. \n The most common type of firmware found in a computer is called the BIOS (basic input/output system), which provides the computer with the most basic of tasks before the operating system is even loaded. Without the BIOS, the computer would be rather useless, as it wouldn’t even be able to read the hard drive and load the operating system. Firmware is persistent: it remains on the chip even after the power is removed, unlike temporary storage (such as RAM). \n \n \n \n \n 固件是硬件和軟件的組合，通常稱為“芯片上的軟件”。固件允許控制芯片所連接的設備。固件芯片包含專用軟件，通常連接到主板，光盤驅動器（例如CD，DVD或藍光），大容量存儲設備和其他專用硬件。 \n 在較早版本的固件中，除非更換了物理芯片，否則固件無法升級，但是近年來，固件被設計為“可刷新的”。 這意味著，如果軟件過時或出現編程錯誤，則可以升級芯片。 該固件“閃存”用最新版本替換了芯片上的舊軟件，從而提高了性能或增強了安全性。 \n 計算機中最常見的固件類型稱為BIOS（基本輸入/輸出系統），BIOS甚至在加載操作系統之前就為計算機提供了最基本的任務。 沒有BIOS，計算機將變得毫無用處，因為它甚至無法讀取硬盤驅動器並加載操作系統。 固件具有持久性：與臨時存儲（例如RAM）不同，固件即使在斷電後仍保留在芯片上。 \n \n \n \n \n \n \n \n \n P11   Componentization/Standardization (組件化/標準化) \n \n Componentization is the process of breaking down large and complex items into simple, reusable, and interchangeable pieces. For many years, computer software and hardware were made by individual companies building things that only worked for a single system. For example, if IBM made a network card, it would not work in a Compaq or Dell computer. Over the years, hardware developers realized that if they could agree to a set of standards, they could create components that could be built to work together using standard interfaces, which saves time, money, and complexity. This same concept is now being used in the software world under object-oriented programming — a standardized method of programming. \n Standardization allows for a set of rules that everyone can follow so that hardware is interoperable and software is interoperable. This increases the ability to have componentization of hardware and software, since the input and output created are standardized. For example, web pages are coded in HTML (HyperText Markup Language), which all web browsers understand. Therefore, the user can use any web browser and still get the content they are interested in viewing because of the standardization of the system. \n \n \n \n \n 組件化是將大型和復雜項目分解為簡單，可重用和可互換的部分的過程。多年來，計算機軟件和硬件是由獨立的公司製造的，這些公司只能在單個系統上工作。例如，如果IBM製作了網卡，則它不能在Compaq或Dell計算機中工作。多年以來，硬件開發人員意識到，如果他們同意一套標準，他們可以創建可以構建為使用標準接口一起工作的組件，從而節省了時間，金錢和復雜性。現在，在面向對象的程序設計（一種標準化的程序設計方法）下的軟件世界中使用了相同的概念。 \n 標準化允許每個人都可以遵循一組規則，以便硬件可互操作，軟件可互操作。 由於創建的輸入和輸出是標準化的，因此這提高了對硬件和軟件進行組件化的能力。 例如，網頁以HTML（超文本標記語言）編碼，所有網絡瀏覽器都可以理解。 因此，由於系統的標準化，用戶可以使用任何Web瀏覽器，並且仍然可以獲得他們感興趣的內容。 \n \n \n \n \n \n \n \n \n P12  Connection Interfaces and Cables (連接接口和電纜) \n \n When looking at a customer’s personal computer, you must be able to easily identify the various components that make up the computer by sight. As you look at the image of the computer, you notice the various parts, such as the CD/DVD drive and the memory card reader bay. Both of these components would be classified as part of the storage subsystem. The headphone jack is used for audio output, while the microphone jack is used for audio input. The USB and FireWire ports are used for both input and output, as well as storage, depending on the device that is connected to the port. For example, if we connect a printer to the USB port, it would be used for output, but if we instead connected a mouse to the USB port, it would be used for input. \n For more information on cables and connections, watch this video: \n 查看客戶的個人計算機時，您必須能夠通過視線輕鬆識別組成計算機的各種組件。當您查看計算機的圖像時，會注意到各個部分，例如CD / DVD驅動器和存儲卡讀取器托架。這兩個組件都將歸類為存儲子系統的一部分。耳機插孔用於音頻輸出，而麥克風插孔用於音頻輸入。USB和FireWire端口用於輸入和輸出以及存儲，具體取決於連接到該端口的設備。例如，如果我們將打印機連接到USB端口，它將用於輸出，但是如果我們將鼠標連接到USB端口，則它將用於輸入。 \n 有關電纜和連接的更多信息，請觀看以下視頻： \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n P13  External Components of the Desktop System Unit \n (台式機系統單元的外部組件) \n \n The lab activity below is designed to help you locate and understand the purpose of the various bays and ports on a desktop PC system unit. To identify components, move your mouse pointer over the name of the component or the image. Then be sure to click on each component to see a detailed view. In the detailed view, you will be able to examine the cables of various peripherals. You also will be able to see the most common bays and the way peripherals fit into them. \n After you\'ve had the opportunity to use the simulator carefully, answer the question below. \n 下面的實驗活動旨在幫助您查找和了解台式PC系統單元上各種托架和端口的用途。要識別組件，請將鼠標指針移到組件或圖像的名稱上。然後，請確保單擊每個組件以查看詳細視圖。在詳細視圖中，您將能夠檢查各種外圍設備的電纜。您還將能夠看到最常見的托架以及外圍設備裝入它們的方式。 \n 在有機會仔細使用模擬器之後，請回答以下問題。 \n \n \n \n \n \n \n \n \n \n \n \n \n \n A: power button. \n 電源按鈕。 \n B: memory card reader bay. \n 存儲卡讀取器托架。 \n C: CD/DVD drive. \n CD / DVD驅動器。 \n D: \xa0USB ports. \n 隨身碟端口 \n E: microphone jack (input). \n 麥克風插孔（輸入） \n F: \xa0headphone jack (output). \n 耳機插孔（輸出） \n G: \xa0FireWire 400 port. \n FireWire 400端口。 \n \n \n \n \n \n \n \n \n p14\xa0 Connections Between Common Peripherals and Standard Ports \n (通用外設與標準端口之間的連接) \n \n The peripherals connect to the computer via standard ports. Ports allow for information to flow into or out of the computer as part of the input and output subsystems. External devices, such as keyboards, mice, printers, scanners, storage devices, monitors, and others can connect to the computer through various types of cables, which connect to specific ports. On most modern systems, this has been reduced down to a common, standard interface, the universal serial bus port (USB port). Older systems have various ports for various functions, which are now referred to as legacy ports, such as PS/2, serial, and parallel ports. They were difficult to configure and required hardware resources to be dedicated to them, such as interrupt requests, direct memory access, and specific I/O (input/output) port addresses. In USB, this is all handled by the operating system automatically. This makes hardware conflicts rare in current systems. Many customers will still have computers with legacy ports. So, it is important to understand multiple ports and connections. \n The photo below offers a close-up view of a motherboard’s port cluster. \n 外圍設備通過標準端口連接到計算機。端口允許信息作為輸入和輸出子系統的一部分流入或流出計算機。外部設備（例如鍵盤，鼠標，打印機，掃描儀，存儲設備，顯示器和其他設備）可以通過各種類型的電纜連接到計算機，這些電纜連接到特定的端口。在大多數現代系統上，這已簡化為通用的標準接口，即通用串行總線端口（USB端口）。較舊的系統具有用於各種功能的各種端口，這些端口現在稱為傳統端口，例如PS / 2，串行和並行端口。它們很難配置，並且需要專用於它們的硬件資源，例如中斷請求，直接內存訪問和特定的I / O（輸入/輸出）端口地址。在USB中，這全部由操作系統自動處理。這使得在當前系統中很少發生硬件衝突。許多客戶仍將擁有帶有舊端口的計算機。因此，了解多個端口和連接很重要。 \n 下面的照片提供了主板端口集群的特寫視圖。 \n \n \n \n \n \n The chart below describes the functions of the ports depicted in the image above. \n \n \n \n \n \n \n \n \n \n The photo below shows various types of connectors. \n \n Image Credits Terry Chay . DB-25 parallel cable photo (B) used under public domain from \xa0 Clipart Today . DB-15 cable photo (C) used under public domain from \xa0 Wikipedia . VGA cable photo (D) used under public domain image from \xa0 Clipart Today . DVI cable photo (E) used under public domain from \xa0 Clipart Today . PS/2 cable photo (F) used under CC-BY-SA license from \xa0 Wikipedia . RJ-11 (telephone modem) cable photo (G) used under CC-BY-NC-ND license from \xa0 Lori Semprevio . RJ-45 cable photo (H) used under CC-BY-NC-ND license from \xa0 Gabriel R F . USB Cable photo (I) used under public domain from \xa0 Wikipedia . HDMI cable photo (J) used under public domain from \xa0 Clipart Today . Mini stereo cable photo (K) used under public domain from \xa0 Clipart Today . \n 圖片來源：Terry Chay。 DB-25並行電纜照片（B），來自Clipart Today的公共領域中使用。 DB-15電纜照片（C）在維基百科的公共領域使用。 VGA電纜照片（D）在來自Clipart Now的公共領域圖像下使用。 DVI電纜照片（E），來自Clipart Today的公共領域中使用。 PS / 2電纜照片（F）已獲得Wikipedia的CC-BY-SA許可。 RJ-11（電話調製解調器）電纜照片（G），根據Lori Semprevio的CC-BY-NC-ND許可使用。 Gabriel R F的CC-BY-NC-ND許可下使用的RJ-45電纜照片（H）。Wikipedia的公共領域下使用的USB電纜照片（I）。 剪貼畫今天在公共領域使用的HDMI電纜照片（J）。 剪貼畫今天在公共領域使用的微型立體聲電纜照片（K）。 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '個人.html'}, {'title': '團隊', 'text': '', 'tags': '', 'url': '團隊.html'}, {'title': 'hw1組員分配', 'text': '40823152: \n \n \n \n UNIT\xa01: Succeeding in PC Hardware \n \xa0\xa0\xa0 \n \n \n UNIT\xa02: Hardware Basics \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa01: The Basics \n \n \n \n \xa0 40923205 : \n \n \n \n \xa0\xa0 \n PCH\xa02: Procedures and Safety \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa03: Customer Relations \n (Available Practice) \n \n \n \n \n \xa0 40923212 \xa0 \n \n \n \n UNIT\xa03: Hardware Components \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa04: Cases, Form Factors, and Power Supplies \n (Available Practice) \n \n \n \n \n 40923214 \n \n \n \n \xa0\xa0\xa0 \n PCH\xa05: Motherboards, Expansion Buses, and Processors \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa06: Memory and BIOS \n (Available Practice) \n \n \n \n \n \xa0 40923217 \n \n \n \n PCH\xa07: Expansion Cards, Audio, Video, and Storage \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa08: Cooling \n (Available Practice) \n \n \n \n \n 40923226 \n \n \n \n UNIT\xa04: Networking and Internet \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa09: Networking Overview \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \n 40923236 \n \n \n \n \xa0\xa0\xa0 \n PCH\xa010: Networking Hardware \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa011: Networking Media \n (Available Practice) \n \n \n \n \n \xa0 40923241 \n \n \n \n \xa0\xa0 \n PCH\xa012: Ethernet Standards \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa013: IPv4 and IPv6 Addresses \n (Available Practice) \n \n \n \n \n \xa0 40923242 \n \n \n \n \xa0 \n PCH\xa014: TCP and UDP Protocols \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa015: Introduction to Wireless Networking \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa016: Internet Connectivity \n (Available Practice) \n \n \n \n \n \xa0 40923246 \n \n \n \n UNIT\xa05: Notebooks and Laptops \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa017: Notebook Features and Components \n (Available Practice) \n \n \n \n \n \xa0 40923251 \n \n \n \n \xa0 \n PCH\xa018: Laptop and Notebook Component Replacement \n (Available Practice) \n \n \xa0\xa0\xa0 \n \n \n \xa0\xa0\xa0 \n PCH\xa019: Notebook Power and Physical Security \n (Available Practice) \n \n \n \n \n', 'tags': '', 'url': 'hw1組員分配.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': '常見指令', 'text': '', 'tags': '', 'url': '常見指令.html'}]};